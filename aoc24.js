const array=require('./array')


let input
    =require('fs')
    .readFileSync('input/aoc24.txt','utf8')
    .split('\r\n')
    .join('')
    .split('')
    .map(e=>e=='.'?0:1)


let part1=()=>{
    let seen=[]
    let state=[...input]
    while(true){
        let i=0, val=0
        while(i<25) val+=state[i]<<i++
        if(seen[val]) return val
        seen[val]=1
        let state2=[]
        for(let i=0;i<25;i++){
            let [y,x,n]=[(i/5)|0,i%5,0]
            if(y>0 && state[5*(y-1)+x  ]) n++
            if(x>0 && state[5*y    +x-1]) n++
            if(y<4 && state[5*(y+1)+x  ]) n++
            if(x<4 && state[5*y    +x+1]) n++
            if(state[i]) state2[i]=(n==1)?1:0
            else state2[i]=(n==1 || n==2)?1:0
        }
        state=state2
    }
}


let nb=[
    /* CELL     LEVEL-1     LEVEL           LEVEL+1
    /* --------------------------------------------
    /*  0 */    [[7,11],    [1,5],          []],
    /*  1 */    [[7],       [0,2,6],        []],
    /*  2 */    [[7],       [1,3,7],        []],
    /*  3 */    [[7],       [2,4,8],        []],
    /*  4 */    [[7,13],    [3,9],          []],
    /*  5 */    [[11],      [0,6,10],       []],
    /*  6 */    [[],        [1,5,7,11],     []],
    /*  7 */    [[],        [2,6,8],        [0,1,2,3,4]],
    /*  8 */    [[],        [3,7,9,13],     []],
    /*  9 */    [[13],      [4,8,14],       []],
    /* 10 */    [[11],      [5,11,15],      []],
    /* 11 */    [[],        [6,10,16],      [0,5,10,15,20]],
    /* 12 */    [[],        [],             []],
    /* 13 */    [[],        [8,14,18],      [4,9,14,19,24]],
    /* 14 */    [[13],      [9,13,19],      []],
    /* 15 */    [[11],      [10,16,20],     []],
    /* 16 */    [[],        [11,15,17,21],  []],
    /* 17 */    [[],        [16,18,22],     [20,21,22,23,24]],
    /* 18 */    [[],        [13,17,19,23],  []],
    /* 19 */    [[13],      [14,18,24],     []],
    /* 20 */    [[11,17],   [15,21],        []],
    /* 21 */    [[17],      [16,20,22],     []],
    /* 22 */    [[17],      [17,21,23],     []],
    /* 23 */    [[17],      [18,22,24],     []],
    /* 24 */    [[13,17],   [19,23],        []],
]


let part2=(g)=>{
    let G,G2,p,q,r,n,i    
    G=array([g+1,25],0)
    G[g/2]=[...input]
    for(p=0;p<g;p++){
        G2=array([g+1,25],0)
        for(q=0;q<=g;q++){
            for(i=0;i<25;i++){
                for(n=0,r=q-1;r<=q+1;r++)
                    for(let m of nb[i][r-q+1])
                        n+=r>=0 && r<=g && G[r][m]
                G2[q][i]=G[q][i] 
                    ? (n==1)?1:0
                    : (n==1 || n==2)?1:0
            }
        }
        G=G2
    }
    let bugs=0
    for(let d=0;d<=g;d++)
        for(let i of G[d])
            bugs+=i
    return bugs
}


console.log(part1())
console.log(part2(200))